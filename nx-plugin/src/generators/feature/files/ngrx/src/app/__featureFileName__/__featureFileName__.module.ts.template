import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule, Routes } from '@angular/router';
import { SharedModule } from '../shared/shared.module';
import { PortalCoreModule } from '@onecx/portal-integration-angular'
import { addInitializeModuleGuard } from '@onecx/angular-integration-interface'
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CalendarModule } from 'primeng/calendar';
import {
  MissingTranslationHandler,
  TranslateLoader,
  TranslateModule
} from '@ngx-translate/core';
import { HttpClient } from '@angular/common/http';
import { LetDirective } from '@ngrx/component';
import { StoreModule } from '@ngrx/store';
import { routes } from './<%= featureFileName %>.routes';
import { <%= featurePropertyName %>Feature } from './<%= featureFileName %>.reducers';
import { EffectsModule } from '@ngrx/effects';


@NgModule({
  declarations: [
  ],
  imports: [
    CommonModule,
    SharedModule,
    LetDirective,
    PortalCoreModule.forMicroFrontend(),
    RouterModule.forChild(<% if(!standalone){ %>addInitializeModuleGuard(routes)<% }else{ %>routes<% } %>),
    FormsModule,
    ReactiveFormsModule,
    CalendarModule,
    StoreModule.forFeature(<%= featurePropertyName %>Feature),
    EffectsModule.forFeature(),
    TranslateModule
  ],
  <%_ if(standalone){ _%>providers: [
    {
      provide: HAS_PERMISSION_CHECKER,
      useValue: AlwaysGrantPermissionChecker,
    },
  ],
  <%_ } _%>
})
export class <%= featureClassName %>Module {}
