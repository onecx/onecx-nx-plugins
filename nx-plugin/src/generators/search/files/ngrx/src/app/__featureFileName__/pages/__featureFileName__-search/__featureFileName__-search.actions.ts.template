import { createActionGroup, emptyProps, props } from '@ngrx/store'
import {
  GroupByCountDiagramComponentState,
  InteractiveDataViewComponentState,
  SearchHeaderComponentState
} from '@onecx/portal-integration-angular'
import { <%= dataObjectName %> } from '../../../shared/generated'
import { <%= featureClassName %>SearchCriteria } from './<%= featureFileName %>-search.parameters'

export const <%= featureClassName %>SearchActions = createActionGroup({
  source: '<%= featureClassName %>Search',
  events: {
    searchButtonClicked: props<{ searchCriteria: <%= featureClassName %>SearchCriteria }>(),
    resetButtonClicked: emptyProps(),
    <%= featurePropertyName %>SearchResultsReceived: props<{
      stream: <%= dataObjectName %>[];
      size: number
      number: number
      totalElements: number
      totalPages: number
    }>(),
    <%= featurePropertyName %>SearchResultsLoadingFailed: props<{ error: string | null }>(),
    exportButtonClicked: emptyProps(),
    resultComponentStateChanged: props<InteractiveDataViewComponentState>(),
    searchHeaderComponentStateChanged: props<SearchHeaderComponentState>(),
    diagramComponentStateChanged: props<GroupByCountDiagramComponentState>(),
    chartVisibilityToggled: emptyProps(),
    detailsButtonClicked: props<{ id: string }>(),
    viewModeChanged: props<{ viewMode: 'basic' | 'advanced' }>(),
    displayedColumnsChanged: props<{ displayedColumns: string[] }>(),
    editButtonClicked: props<{ id: string }>(),
    createButtonClicked: emptyProps(),
    createSucceeded: emptyProps(),
    createCancelled: emptyProps(),
    createFailed: props<{ error: any }>(),
    updateCancelled: emptyProps(),
    updateSucceeded: emptyProps(),
    updateFailed: props<{ error: any }>(),
    deleteButtonClicked: props<{ id: string }>(),
    deleteSucceeded: emptyProps(),
    deleteCancelled: emptyProps(),
    deleteFailed: props<{ error: any }>(),
  }
})